# webhook
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.webhookDeployment }}
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    app: {{ .Values.webhookDeployment }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.webhookDeployment }}
  template:
    metadata:
      labels:
        app: {{ .Values.webhookDeployment }}
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      serviceAccount: {{ .Values.webhookServiceAccount }}
      containers:
        - name: {{ .Values.webhookDeployment }}
          image: "{{ .Values.webhookImage.name }}:{{ .Values.webhookImage.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: REPO
              value: "ciscolabs"
            - name: TAG
              value: "latest"
            - name: MSM_SIDECAR
              value: "msm-rtsp-stub"
            - name: IMAGE_PULL_POLICY
              value: "IfNotPresent"
            - name: LOG_LVL
              value: "DEBUG"
            - name: MSM_LOG_LVL
              value: "TRACE"
            - name: MSM_CONTROL_PLANE
              value: "http://10.43.3.1:9000"
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
---
# msm-controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.controllerName }}
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    msm: {{ .Values.controllerDeployment }}
  namespace: {{ .Values.nameSpace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      msm: {{ .Values.controllerDeployment }}
  template:
    metadata:
      labels:
        msm: {{ .Values.controllerDeployment }}
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
        - name: {{ .Values.controllerName }}
          image: "{{ .Values.controllerImage.name }}:{{ .Values.controllerImage.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              protocol: TCP
              containerPort: 9000
          env:
            - name: LOG_LVL
              value: "TRACE"
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
---
# rtsp-client
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtsp-client
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    rtsp: client
  namespace: {{ .Values.nameSpace }}
spec:
  selector:
    matchLabels:
      rtsp: client
  template:
    metadata:
      labels:
        rtsp: client
      annotations:
        sidecar.mediastreamingmesh.io/inject: "true"
    spec:
      containers:
        - name: rtsp-client
          image: "{{ .Values.clientImage.name }}:{{ .Values.clientImage.tag }}"
          imagePullPolicy: IfNotPresent
---
# rtsp-server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtsp-server
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    app: rtsp
  namespace: {{ .Values.nameSpace }}
spec:
  selector:
    matchLabels:
      app: rtsp
  template:
    metadata:
      labels:
        app: rtsp
      annotations:
        sidecar.mediastreamingmesh.io/inject: "true"
    spec:
      containers:
        - name: rtsp-server
          image: "{{ .Values.serverImage.name }}:{{ .Values.serverImage.tag }}"
          imagePullPolicy: IfNotPresent
        - name: rtsp-client
          image: "{{ .Values.clientImage.name }}:{{ .Values.clientImage.tag }}"
          imagePullPolicy: IfNotPresent
          command: ["ffmpeg"]
          args:
            [
              "-re",
              "-stream_loop",
              "-100",
              "-i",
              "/tmp/video.mjpeg",
              "-input_format",
              "mjpeg",
              "-pix_fmt",
              "yuvj420p",
              "-vcodec",
              "mjpeg",
              "-huffman",
              "default",
              "-f",
              "rtsp",
              "rtsp://0.0.0.0:554/mystream",
            ]
          volumeMounts:
            - mountPath: /tmp
              name: movies
      volumes:
        - name: movies
          hostPath:
            path: /tmp
