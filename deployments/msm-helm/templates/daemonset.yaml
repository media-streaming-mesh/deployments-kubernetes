# cni
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.cniClusterRole}}
  namespace: {{ .Values.nameSpace }}
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    app: {{ .Values.cniClusterRole}}
spec:
  selector:
    matchLabels:
      app: {{ .Values.cniClusterRole}}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.cniClusterRole}}
      annotations:
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        # Make sure msm-cni gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      priorityClassName: system-node-critical
      serviceAccountName: {{ .Values.cniClusterRole}}
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
      containers:
        # This container installs the MSM CNI binaries
        # and CNI network config file on each node.
        - name: installer
          image: "{{ .Values.cniImage.name }}:{{ .Values.cniImage.tag }}"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
          command: ["installer"]
          env:
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: {{.Values.cniConfigMap}}
                  key: cni_network_config
            - name: CNI_NET_DIR
              value: /etc/cni/net.d
            # Deploy as a standalone CNI plugin or as chained?
            - name: CHAINED_CNI_PLUGIN
              value: "true"
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
---
# msm-gateway
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.gatewayDaemonSet }}
  labels:
    {{- include "msm.labels" . | nindent 4 }}
    msm: {{ .Values.gatewayName }}
  namespace: {{ .Values.nameSpace }}
spec:
  selector:
    matchLabels:
      msm: {{ .Values.gatewayName }}
  template:
    metadata:
      labels:
        msm: {{ .Values.gatewayName }}
    spec:
      hostNetwork: true
      containers:
        - name: msm-proxy
          image: "{{ .Values.proxyImage.name }}:{{ .Values.proxyImage.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: rtp
              protocol: UDP
              containerPort: 8050
            - name: rtcp
              protocol: UDP
              containerPort: 8051
            - name: grpc
              protocol: TCP
              containerPort: 9000
          env:
            - name: LOG_LVL
              value: "DEBUG"
        - name: msm-rtsp-stub
          image: "{{ .Values.stubImage.name }}:{{ .Values.stubImage.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: rtsp
              protocol: TCP
              containerPort: 8554
          env:
            - name: MSM_LOG_LVL
              value: "TRACE"
            - name: LOCAL_RTP_PORT
              value: "8000"
            - name: MSM_CONTROL_PLANE
              value: "http://10.43.3.1:9000"
